problem 1

1,2,1 ->1,2,1,1,2,1
public int[] getConcatenation( int [] nums)
{
    int [] ArrayNumber = new int( nums.length*2)
    for (int i=0 ;i< nums.length;i++)
    {
        ArrayNumber[i] = nums[i];
      <hint> --------> ArrayNumber={1,x,x,x,x,x}
        ArrayNumber[i+nums.length]= nums[i]

    }
    return ArrayNumber
}

problem 2
{1,2,3,1}-> true
method_1
public static boolean containDuplicate(int [] nums)
{
    for ( int  i= 0 ;i<nums.length-1;i++)
    {
        for( int j =i+1, j< nums.length;j++)
        {
            if ( nums[i]== nums[j])
            { 
                return true;
            }
        }

    }
    return false;
}

method_2 using sort

public static boolean containDuplicateSort(int[] nums)
{
    Arrays.sort(nums);
    for ( int i = 0 ; i < nums.length;i++)
    {
            if( nums[i]==nums[i+1])
            {
                return true
            }

    }
    return false;
}


method_3 idea hashset chi chua phan tu duy nhat kiem tra co ton tai hay chua co thi true
public static boolean containDuplicateSort(int[] nums)
{
    HashSet<Integer> space = new HashSet<>();
    for( int i=0 ;i<nums.length;i++)
    {
        if(space.contains(nums[i]))
        {
            return true;
        }
space.add(nums[i]);
    }
    return false;

}


method 4


public static boolean containDuplicateSort(int[] nums)
{
HashMap <Integer, Integert> space = new HashMap<>();
for( int num: nums)
{
    if( space.containsKey(num)&& space.get(num)>=1)
    {
        return true;
    }

    space.put( num,space.getOrDefault(num,0)+1);

}
return false;

}

problem 3 isSubsequence s="abc" t="ahbgdc"
--> true ( vi dung theo thu tu)

public static boolean checking ( String s, String t)


{
    int  i =  0 , j = 0 ;
    while( i< s.length && j<t.length)
    {
        if( s.chartAt(i)== t.chartAt(j))
        {
            i=i+1
        }
        j=j+1
    }
    if(i =s.length())
    {
        return true;
    }
    else
    {
        return false;
    }
}
problem 4 last_word_length

public static int lengthOfTheLastword( String s)
{
    int i= s.length-1,length = 0  ;
    while( s.charAt (i ) ==' ')
    {
        i-=1;

    }
    while(i>=0 && s.charAt(i)!=' ')
    {
        length  +=1;
        i-=1;
    }
    return length;
}